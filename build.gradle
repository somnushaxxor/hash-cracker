plugins {
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    configurations {
        jaxb
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
                srcDir 'build/generated-sources/jaxb'
            }
        }
    }

    tasks.register('genJaxb') {
        ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
        ext.xsdsDir = "src/main/resources/xsd"
        outputs.dir sourcesDir

        doLast() {
            project.ant {
                taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask", classpath: configurations.jaxb.asPath
                mkdir(dir: sourcesDir)
                xjc(destdir: sourcesDir) {
                    arg(value: "-wsdl")
                    schema(dir: xsdsDir, includes: "*.xsd")
                    produces(dir: sourcesDir, includes: "**/*.java")
                }
            }
        }
    }

    compileJava.dependsOn genJaxb

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.26'
        annotationProcessor 'org.projectlombok:lombok:1.18.26'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-web-services'
        implementation 'wsdl4j:wsdl4j'
        jaxb(
                "org.glassfish.jaxb:jaxb-xjc",
                "jakarta.xml.bind:jakarta.xml.bind-api",
                "org.glassfish.jaxb:jaxb-runtime",
        )

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:3.0.5")
        }
    }

    test {
        useJUnitPlatform()
    }
}